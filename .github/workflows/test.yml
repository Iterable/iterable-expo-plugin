name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  merge_group:
    types:
      - checks_requested

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      coverage: ${{ steps.coverage.outputs.coverage }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run unit tests with coverage
        run: yarn test:coverage --maxWorkers=2

      - name: Check coverage thresholds
        run: |
          COVERAGE_THRESHOLD=80
          COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
          if (( $(echo "$COVERAGE < $COVERAGE_THRESHOLD" | bc -l) )); then
            echo "Coverage ($COVERAGE%) is below threshold ($COVERAGE_THRESHOLD%)"
            exit 1
          fi
          echo "Coverage ($COVERAGE%) is above threshold ($COVERAGE_THRESHOLD%)"

      - id: coverage
        name: Generate coverage badge
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq -r '.total.lines.pct')
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT

      - name: Upload coverage to Code Climate
        uses: paambaati/codeclimate-action@v9.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_KEY }}
        with:
          coverageCommand: yarn test:coverage --coverageReporters lcov
          coverageLocations: |
            ${{github.workspace}}/coverage/lcov.info:lcov

      - name: Test coverage comment
        id: coverageComment
        uses: MishaKav/jest-coverage-comment@main
        with:
          hide-comment: false
          coverage-summary-path: ./coverage/coverage-summary.json

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     directory: ./coverage/
      #     flags: unittests
      #     name: codecov-umbrella
      #     fail_ci_if_error: true
